Index: src/main/java/View/ViewPerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/View/ViewPerson.java b/src/main/java/View/PersonUI.java
rename from src/main/java/View/ViewPerson.java
rename to src/main/java/View/PersonUI.java
--- a/src/main/java/View/ViewPerson.java	(revision 9fe05b644052cc367a6dc405b61c2ec083ea5820)
+++ b/src/main/java/View/PersonUI.java	(date 1721408162653)
@@ -1,13 +1,43 @@
 package View;
 import UTIL.Console;
 
-import java.sql.SQLOutput;
+
+public class PersonUI {
+    //  add delete view
 
+    public int startUpM(){
+        Console.write("Hello, Welcome to our Person Database", Console.TextColor.PURPLE);
+        return Console.getIntInput("""
+                1. Add a Person
+                2. Delete a Person
+                3. Update a Person
+                4. View a Person
+                5. View all People
+                6. Exit
+                """, 1,6, Console.TextColor.PURPLE);
+    }
 
-public class ViewPerson {
-    //startup  create update add delete view
+    public void addM(){
+        Console.write("Enter First Name, Last Name and Hire date separated by commas: ", Console.TextColor.PURPLE);
+    }
 
-    public int startUp(){
+    public void deleteM(){
+        Console.write("Enter user ID to delete: ", Console.TextColor.PURPLE);
+    }
+
+    public int updateM(){
+        Console.write("Hello, Welcome to our Person Database", Console.TextColor.PURPLE);
+        return Console.getIntInput("""
+                1. Add a Person
+                2. Delete a Person
+                3. Update a Person
+                4. View a Person
+                5. View all People
+                6. Exit
+                """, 1,6, Console.TextColor.PURPLE);
+    }
+
+    public int viewM(){
         Console.write("Hello, Welcome to our Person Database", Console.TextColor.PURPLE);
         return Console.getIntInput("""
                 1. Add a Person
@@ -20,7 +50,11 @@
     }
 
     public void goodbye(){
-        System.out.println("Thank you for visiting! Goodbye");
+        Console.write("Thank you for visiting! Goodbye", Console.TextColor.PURPLE);
+    }
+
+    public void error(){
+        Console.write("A criteria error occurred! Follow the Parameters Required", Console.TextColor.RED);
     }
 
 
Index: src/main/java/Controller/PersonController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Controller;\r\n\r\nimport UTIL.Console;\r\nimport Model.Person;\r\nimport View.ViewPerson;\r\n\r\nimport java.io.*;\r\nimport java.nio.file.*;\r\nimport java.util.*;\r\nimport java.util.List;\r\n\r\npublic class PersonController {\r\n    private static final String PEOPLE_DATA = Paths.get(\"src/main/java/long\").toString();\r\n    private static final String PEOPLE_SERIALIZED = Paths.get(\"long serialized\").toString();\r\n    private static List<String> peopleList;\r\n    private static int currentId = 0;\r\n    private static Map<Integer, Person> readPersonDict = new HashMap<>();\r\n    private static Map<String, List<Person>> lastName = new HashMap<>();\r\n    ViewPerson menu = new ViewPerson();\r\n\r\n    public void startUp() throws IOException, ClassNotFoundException {\r\n        try {\r\n            peopleList = Files.list(Paths.get(PEOPLE_DATA))\r\n                    .filter(Files::isRegularFile)\r\n                    .map(Path::getFileName)\r\n                    .map(String::valueOf)\r\n                    .sorted(Comparator.comparingInt(s -> Integer.parseInt(s.split(\"\\\\.\")[0])))\r\n                    .toList();\r\n        } catch (IOException e){\r\n            System.out.println(\"No files found\");\r\n        }\r\n\r\n        if (Files.exists(Paths.get(PEOPLE_SERIALIZED))) {\r\n            Files.walk(Paths.get(PEOPLE_SERIALIZED))\r\n                    .filter(Files::isRegularFile)\r\n                    .map(Path::toFile)\r\n                    .forEach(File::delete);\r\n        }\r\n        Files.createDirectories(Paths.get(PEOPLE_SERIALIZED));\r\n\r\n        peopleListRead();\r\n        while (true) {\r\n            switch (menu.startUp()){\r\n                case 1:\r\n                    //add\r\n                    addPeople();\r\n                    break;\r\n                case 2:\r\n                    //delete\r\n                    deletePeople();\r\n                    break;\r\n                case 3:\r\n                    //update\r\n                    updatePeople();\r\n                    break;\r\n                case 4:\r\n                    //view a person\r\n                    viewPerson();\r\n                    break;\r\n                case 5:\r\n                    //view all\r\n                    viewAllPeople();\r\n                    break;\r\n                default:\r\n                    //exit\r\n                    menu.goodbye();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void peopleListRead() throws IOException, ClassNotFoundException {\r\n        long startTime = System.nanoTime();\r\n        for (String people : peopleList) {\r\n            try (BufferedReader br = new BufferedReader(new FileReader(PEOPLE_DATA + \"/\" + people))) {\r\n                String peopleRead = br.readLine();\r\n                String[] personStrip = peopleRead.split(\",\");\r\n                int ID = Integer.parseInt(personStrip[0].strip());\r\n                String newFName = personStrip[1].strip();\r\n                String newLName = personStrip[2].strip();\r\n                String newHireYear = personStrip[3].strip();\r\n                Person newPerson = new Person(ID, newFName, newLName, newHireYear);\r\n                readPersonDict.put(currentId, newPerson);\r\n                if (lastName.containsKey(newLName)) {\r\n                    if (lastName.get(newLName) != null) {\r\n                        ((List<Person>)lastName.get(newLName)).add(newPerson);\r\n                    } else {\r\n                        List<Person> tempList = new ArrayList<>();\r\n                        tempList.add(lastName.get(newLName).get(currentId));\r\n                        tempList.add(newPerson);\r\n                        lastName.put(newLName, tempList);\r\n                    }\r\n                } else {\r\n                    lastName.put(newLName, Collections.singletonList(newPerson));\r\n                }\r\n                currentId = ID;\r\n                try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(PEOPLE_SERIALIZED + \"/\" + ID + \".ppkl\"))) {\r\n                    oos.writeObject(newPerson);\r\n                }\r\n            }\r\n        }\r\n        long endTime = System.nanoTime();\r\n        System.out.println(String.format(\"Run Time of Reading the List: %.6f seconds\", (endTime - startTime) / 1_000_000_000.0));\r\n    }\r\n\r\n    private static void addPeople() throws IOException {\r\n        currentId++;\r\n        long startTime = System.nanoTime();\r\n        while (true) {\r\n            String newPerson = Console.getStringInput(\"Enter First Name, Last Name and Hire date separated by commas: \");\r\n            String[] personInfo = newPerson.split(\",\");\r\n            String firstName = personInfo[0].strip();\r\n            String lastName = personInfo[1].strip();\r\n            String hireYear = personInfo[2].strip();\r\n            if (!(2 <= firstName.length() && firstName.length() <= 16 && !firstName.matches(\"\\\\d+\"))) {\r\n                System.out.println(\"First Name not within character limit or is digit. Limit = 16\");\r\n                continue;\r\n            }\r\n            if (!(2 <= lastName.length() && lastName.length() <= 16 && !lastName.matches(\"\\\\d+\"))) {\r\n                System.out.println(\"Last Name not within character limit or is digit. Limit = 16\");\r\n                continue;\r\n            }\r\n            if (!(hireYear.matches(\"\\\\d{4}\") && Integer.parseInt(hireYear) >= 1900 && Integer.parseInt(hireYear) <= 2023)) {\r\n                System.out.println(\"Invalid Year\");\r\n                continue;\r\n            }\r\n            Person newPersonObj = new Person(currentId, firstName, lastName, hireYear);\r\n            readPersonDict.put(currentId, newPersonObj);\r\n            System.out.println(currentId + \" \" + firstName + \" \" + lastName + \" \" + hireYear);\r\n            String writtenPerson = currentId + \", \" + firstName + \", \" + lastName + \", \" + hireYear;\r\n            try (PrintWriter pw = new PrintWriter(new FileWriter(PEOPLE_DATA + \"/\" + currentId + \".txt\"))) {\r\n                pw.println(writtenPerson);\r\n            }\r\n            currentId++;\r\n            break;\r\n        }\r\n        long endTime = System.nanoTime();\r\n        System.out.println(String.format(\"Run Time of Adding a New Person: %.6f seconds\", (endTime - startTime) / 1_000_000_000.0));\r\n    }\r\n\r\n    private static void deletePeople() throws IOException {\r\n        long startTime = System.nanoTime();\r\n        int userSelectedID = Console.getUserInt(\"Enter user ID to delete: \", true);\r\n        for (Person person : readPersonDict.values()) {\r\n            if (userSelectedID == person.getID()) {\r\n                System.out.println(person.getID() + \" \" + person.getFirstName() + \" \" + person.getLastName() + \" \" + person.getHireYear());\r\n                readPersonDict.remove(person.getID());\r\n                Files.deleteIfExists(Paths.get(PEOPLE_DATA + \"/\" + userSelectedID + \".txt\"));\r\n                System.out.println(\"File has been deleted\");\r\n                break;\r\n            }\r\n        }\r\n        long endTime = System.nanoTime();\r\n        System.out.println(String.format(\"Run Time of Deleting a Person: %.6f seconds\", (endTime - startTime) / 1_000_000_000.0));\r\n    }\r\n    private static void updatePeople() throws IOException, ClassNotFoundException {\r\n        long startTime = System.nanoTime();\r\n        int userSelectedID = Console.getUserInt(\"Enter user ID to delete: \", true);\r\n        for (Person person : readPersonDict.values()) {\r\n            if (userSelectedID == person.getID()) {\r\n                System.out.println(person.getID() + \" \" + person.getFirstName() + \" \" + person.getLastName() + \" \" + person.getHireYear());\r\n                update(person, userSelectedID);\r\n                break;\r\n            }\r\n            if (userSelectedID > readPersonDict.size()) {\r\n                System.out.println(\"NO USER FOUND\");\r\n            }\r\n        }\r\n        long endTime = System.nanoTime();\r\n        System.out.println(String.format(\"Run Time of UPDATING: %.6f seconds\", (endTime - startTime) / 1_000_000_000.0));\r\n    }\r\n\r\n    private static void update(Person person, int ID) throws IOException {\r\n        while (true) {\r\n            System.out.println(\" 1. Change Firstname\\n\" +\r\n                    \" 2. Change Lastname\\n\" +\r\n                    \" 3. Change Hire Year\\n\" +\r\n                    \"*Person ID CAN NOT be Updated*\");\r\n            System.out.print(\"Enter choice: \");\r\n            int choice = Console.getUserInt(\"Enter choice: \", true);\r\n            if (choice == 1) {\r\n                String userNewFirstName = Console.getUserStr(\"Enter new first name: \",true);\r\n                if (!(2 <= userNewFirstName.length() && userNewFirstName.length() <= 16 && !userNewFirstName.matches(\"\\\\d+\"))) {\r\n                    System.out.println(\"First Name not within character limit or is digit. Limit = 16\");\r\n                    continue;\r\n                } else {\r\n                    person.setFirstName(userNewFirstName);\r\n                }\r\n            } else if (choice == 2) {\r\n                String userNewLastName = Console.getUserStr(\"Enter new last name: \",true);\r\n                if (!(2 <= userNewLastName.length() && userNewLastName.length() <= 16 && !userNewLastName.matches(\"\\\\d+\"))) {\r\n                    System.out.println(\"Last Name not within character limit or is digit. Limit = 16\");\r\n                    continue;\r\n                } else {\r\n                    person.setLastName(userNewLastName);\r\n                }\r\n            } else if (choice == 3) {\r\n                String newHireYear = Console.getUserStr(\"Enter new hire year: \",true);\r\n                if (!(newHireYear.matches(\"\\\\d{4}\") && Integer.parseInt(newHireYear) >= 1900 && Integer.parseInt(newHireYear) <= 2023)) {\r\n                    System.out.println(\"Invalid Year\");\r\n                    continue;\r\n                } else {\r\n                    person.setHireYear(newHireYear);\r\n                }\r\n            }\r\n            String writtenPerson = person.getID() + \", \" + person.getFirstName() + \", \" + person.getLastName() + \", \" + person.getHireYear();\r\n            try (PrintWriter pw = new PrintWriter(new FileWriter(PEOPLE_DATA + \"/\" + ID + \".txt\"))) {\r\n                pw.println(writtenPerson);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    private static void viewPerson() throws IOException, ClassNotFoundException {\r\n        long startTime = System.nanoTime();\r\n        String userSelectedInfo = Console.getUserStr(\"Enter user ID or last name to view contents: \",true);\r\n        for (Person person : readPersonDict.values()) {\r\n            if (userSelectedInfo.matches(\"\\\\d+\")) {\r\n                if (Integer.parseInt(userSelectedInfo) == person.getID()) {\r\n                    System.out.println(person.getID() + \" \" + person.getFirstName() + \" \" + person.getLastName() + \" \" + person.getHireYear());\r\n                    break;\r\n                }\r\n            } else {\r\n                if (lastName.containsKey(userSelectedInfo.toUpperCase())) {\r\n                    for (Person p : lastName.get(userSelectedInfo.toUpperCase())) {\r\n                        System.out.println(p.getID() + \" \" + p.getFirstName() + \" \" + p.getLastName() + \" \" + p.getHireYear());\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        long endTime = System.nanoTime();\r\n        System.out.println(String.format(\"Run Time of Viewing a Person: %.6f seconds\", (endTime - startTime) / 1_000_000_000.0));\r\n    }\r\n    private static void viewAllPeople() throws IOException, ClassNotFoundException {\r\n        long startTime = System.nanoTime();\r\n        for (Person person : readPersonDict.values()) {\r\n            System.out.println(person.getID() + \" \" + person.getFirstName() + \" \" + person.getLastName() + \" \" + person.getHireYear());\r\n        }\r\n        long endTime = System.nanoTime();\r\n        System.out.println(String.format(\"Run Time of Viewing All People: %.6f seconds\", (endTime - startTime) / 1_000_000_000.0));\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Controller/PersonController.java b/src/main/java/Controller/PersonController.java
--- a/src/main/java/Controller/PersonController.java	(revision 9fe05b644052cc367a6dc405b61c2ec083ea5820)
+++ b/src/main/java/Controller/PersonController.java	(date 1721407986946)
@@ -2,7 +2,7 @@
 
 import UTIL.Console;
 import Model.Person;
-import View.ViewPerson;
+import View.PersonUI;
 
 import java.io.*;
 import java.nio.file.*;
@@ -16,7 +16,7 @@
     private static int currentId = 0;
     private static Map<Integer, Person> readPersonDict = new HashMap<>();
     private static Map<String, List<Person>> lastName = new HashMap<>();
-    ViewPerson menu = new ViewPerson();
+    PersonUI menu = new PersonUI();
 
     public void startUp() throws IOException, ClassNotFoundException {
         try {
@@ -40,7 +40,7 @@
 
         peopleListRead();
         while (true) {
-            switch (menu.startUp()){
+            switch (menu.startUpM()){
                 case 1:
                     //add
                     addPeople();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"99005f2a-359f-4ab1-b413-9187ba8b5a2c\" name=\"Changes\" comment=\"AGENDA:&#10;&#10;1. The person class is implemented and it works with the person controller&#10;&#10;2. Changed all PersonController methods so that they use the Console UTIL class rather then scanners.&#10;&#10;3. Fully implemented all methods from our Python project.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Controller/PersonController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Controller/PersonController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/View/ViewPerson.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/View/ViewPerson.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Stat3132&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Stat3132/MongoDB_Project&quot;,\r\n    &quot;accountId&quot;: &quot;a55baf6b-1319-4309-8d9a-12584a3ec5bd&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2jI6pem7eklzvXvh50GBbqy44oM\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Neumont/Year 1/Q4/Work/Database-II/Projects/MongoDB_Project&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Neumont\\Year 1\\Q4\\Work\\OpenSource\\Projects\\MongoDB_Project\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"18\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"MongoDB_Project\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.18034.62\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.18034.62\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"99005f2a-359f-4ab1-b413-9187ba8b5a2c\" name=\"Changes\" comment=\"\" />\r\n      <created>1721062428946</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1721062428946</updated>\r\n      <workItem from=\"1721062430022\" duration=\"1578000\" />\r\n      <workItem from=\"1721064025950\" duration=\"638000\" />\r\n      <workItem from=\"1721239522410\" duration=\"120000\" />\r\n      <workItem from=\"1721239676429\" duration=\"1252000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"This is just a test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721062945500</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721062945500</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"This is just a test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721063909401</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721063909401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"This is just a test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721064284635</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721064284635</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"AGENDA:&#10;&#10;1. The person class is implemented and it works with the person controller&#10;&#10;2. Changed all PersonController methods so that they use the Console UTIL class rather then scanners.&#10;&#10;3. Fully implemented all methods from our Python project.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1721237898672</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1721237898672</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"This is just a test\" />\r\n    <MESSAGE value=\"AGENDA:&#10;&#10;1. The person class is implemented and it works with the person controller&#10;&#10;2. Changed all PersonController methods so that they use the Console UTIL class rather then scanners.&#10;&#10;3. Fully implemented all methods from our Python project.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"AGENDA:&#10;&#10;1. The person class is implemented and it works with the person controller&#10;&#10;2. Changed all PersonController methods so that they use the Console UTIL class rather then scanners.&#10;&#10;3. Fully implemented all methods from our Python project.\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/Controller/PersonController.java</url>\r\n          <line>19</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9fe05b644052cc367a6dc405b61c2ec083ea5820)
+++ b/.idea/workspace.xml	(date 1721433985667)
@@ -5,10 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="99005f2a-359f-4ab1-b413-9187ba8b5a2c" name="Changes" comment="AGENDA:&#10;&#10;1. The person class is implemented and it works with the person controller&#10;&#10;2. Changed all PersonController methods so that they use the Console UTIL class rather then scanners.&#10;&#10;3. Fully implemented all methods from our Python project.">
-      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Controller/PersonController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Controller/PersonController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/View/ViewPerson.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/View/ViewPerson.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/View/ViewPerson.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/View/PersonUI.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -37,12 +37,12 @@
     &quot;assignee&quot;: &quot;Stat3132&quot;
   }
 }</component>
-  <component name="GithubPullRequestsUISettings">{
-  &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/Stat3132/MongoDB_Project&quot;,
-    &quot;accountId&quot;: &quot;a55baf6b-1319-4309-8d9a-12584a3ec5bd&quot;
-  }
-}</component>
+  <component name="GithubPullRequestsUISettings"><![CDATA[{
+  "selectedUrlAndAccountId": {
+    "url": "https://github.com/Stat3132/MongoDB_Project.git",
+    "accountId": "525ef4af-595e-4f1c-a578-eebb8a96a1a9"
+  }
+}]]></component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 4
 }</component>
@@ -115,6 +115,7 @@
       <workItem from="1721064025950" duration="638000" />
       <workItem from="1721239522410" duration="120000" />
       <workItem from="1721239676429" duration="1252000" />
+      <workItem from="1721433781098" duration="203000" />
     </task>
     <task id="LOCAL-00001" summary="This is just a test">
       <option name="closed" value="true" />
@@ -148,7 +149,15 @@
       <option name="project" value="LOCAL" />
       <updated>1721237898672</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="AGENDA:&#10;&#10;1. The person class is implemented and it works with the person controller&#10;&#10;2. Changed all PersonController methods so that they use the Console UTIL class rather then scanners.&#10;&#10;3. Fully implemented all methods from our Python project.">
+      <option name="closed" value="true" />
+      <created>1721407083926</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1721407083926</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -164,7 +173,7 @@
       <breakpoints>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/main/java/Controller/PersonController.java</url>
-          <line>19</line>
+          <line>22</line>
           <option name="timeStamp" value="2" />
         </line-breakpoint>
       </breakpoints>
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1721407987401)
+++ b/.idea/uiDesigner.xml	(date 1721407987401)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
